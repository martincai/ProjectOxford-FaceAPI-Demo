<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
//
//*********************************************************
-->

<UserControl x:Class="Microsoft.ProjectOxford.Face.Controls.FaceDetection"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:uc="clr-namespace:Microsoft.ProjectOxford.Face.Controls"
             mc:Ignorable="d" x:Name="FaceDetectionPane" Width="964" FontSize="14" Height="420">
    <!--DesignHeight="360" d:DesignWidth="710"-->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="640" /> <!--300-->
            <ColumnDefinition Width="10" /> <!--96-->
            <ColumnDefinition Width="314" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="45" />
            <RowDefinition Height="360" /> <!--300-->
        </Grid.RowDefinitions>
        <Grid Grid.Column="0" Grid.Row="1" >
            <ItemsControl HorizontalAlignment="Left" VerticalAlignment="Top" ItemsSource="{Binding ResultCollection, ElementName=FaceDetectionPane}" Panel.ZIndex="999" Height="360" Width="640">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Top" Height="360" Width="640" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Canvas.Left" Value="{Binding Left}" />
                        <Setter Property="Canvas.Top" Value="{Binding Top}" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Rectangle Width="{Binding Width}" Height="{Binding Height}" Stroke="Red" StrokeThickness="4"  />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Image HorizontalAlignment="Left" VerticalAlignment="Top" Height="360" Width="640" x:Name="ImageDisplay" >
                <Image.Style>
                    <Style TargetType="{x:Type Image}">
                        <Setter Property="Source" Value="{Binding SelectedFile, ElementName=FaceDetectionPane}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedFile, ElementName=FaceDetectionPane }" Value="{x:Null}">
                                <Setter Property="Source" Value="/Sample;component/Assets/default.jpg" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </Grid>
        
        <Button Grid.Column="0" Grid.Row="0" Content="微软牛津计划 人脸识别" Width="300" Height="35" Background="#2196f3" Foreground="Black" BorderBrush="Transparent" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0, 0, 0, 0" Click="ImagePicker_Click"/>
        <!--
        <Image Grid.Column="0" Grid.Row="0" Source="assets/logo.jpg" />
        -->
        
        <TextBlock Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding DetectedResultsInText, ElementName=FaceDetectionPane}" />
        <ListView Grid.Column="2" Grid.Row="1" MaxHeight="360" Width="300" HorizontalAlignment="Left" VerticalAlignment="Top" BorderBrush="Transparent" ItemsSource="{Binding DetectedFaces, ElementName=FaceDetectionPane}" Margin="0">
            <ListView.Style>
                <Style TargetType="ListView">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Items.Count}" Value="0">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.Style>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel MaxWidth="300" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="0, 0, 0, 0"> <!-- -3, 5, 5, 5-->
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="64" />
                            <ColumnDefinition Width="10" /> <!--26-->
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" /> <!--16-->
                            <RowDefinition Height="26" /> <!--18-->
                            <RowDefinition Height="26" />
                        </Grid.RowDefinitions>
                        <Image Grid.Column="0" Grid.Row="0" Grid.RowSpan="3" Width="64" Height="64">
                            <Image.Source>
                                <CroppedBitmap Source="{Binding ImagePath}" SourceRect="{Binding UIRect}" />
                            </Image.Source>
                        </Image>
                        <TextBlock Grid.Column="2" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding Gender}" FontSize="26" Foreground="Blue" />
                        <TextBlock Grid.Column="2" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding Age}" FontSize="26" Foreground="Green" />
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListView>
    </Grid>
</UserControl>
